// <auto-generated/>
using OneOf;
using System;
namespace Language.Analysis.CodeAnalysis.Syntax;
public partial class NamespacesOrGlobalStatements
{
    public bool IsNamespaces => _oneOf.IsT0;
    public System.Collections.Generic.List<Language.Analysis.CodeAnalysis.Syntax.NamespaceSyntax> Namespaces => _oneOf.AsT0;
    public bool IsGlobalStatements => _oneOf.IsT1;
    public System.Collections.Immutable.ImmutableArray<Language.Analysis.CodeAnalysis.Syntax.IGlobalMemberSyntax> GlobalStatements => _oneOf.AsT1;

    OneOf<System.Collections.Generic.List<Language.Analysis.CodeAnalysis.Syntax.NamespaceSyntax>, System.Collections.Immutable.ImmutableArray<Language.Analysis.CodeAnalysis.Syntax.IGlobalMemberSyntax>> _oneOf;
    public NamespacesOrGlobalStatements(System.Collections.Generic.List<Language.Analysis.CodeAnalysis.Syntax.NamespaceSyntax> namespaces)
    {
        _oneOf = namespaces;
    }
    public NamespacesOrGlobalStatements(System.Collections.Immutable.ImmutableArray<Language.Analysis.CodeAnalysis.Syntax.IGlobalMemberSyntax> globalStatements)
    {
        _oneOf = globalStatements;
    }

public static implicit operator NamespacesOrGlobalStatements(OneOf<System.Collections.Generic.List<Language.Analysis.CodeAnalysis.Syntax.NamespaceSyntax>, System.Collections.Immutable.ImmutableArray<Language.Analysis.CodeAnalysis.Syntax.IGlobalMemberSyntax>> other){if (other.IsT0){ return new NamespacesOrGlobalStatements(other.AsT0);}if (other.IsT1){ return new NamespacesOrGlobalStatements(other.AsT1);}throw new Exception();}
public static implicit operator OneOf<System.Collections.Generic.List<Language.Analysis.CodeAnalysis.Syntax.NamespaceSyntax>, System.Collections.Immutable.ImmutableArray<Language.Analysis.CodeAnalysis.Syntax.IGlobalMemberSyntax>>(NamespacesOrGlobalStatements @this){    return @this._oneOf;}

    public static implicit operator NamespacesOrGlobalStatements(System.Collections.Generic.List<Language.Analysis.CodeAnalysis.Syntax.NamespaceSyntax> namespaces) => new NamespacesOrGlobalStatements(namespaces);
    public static implicit operator NamespacesOrGlobalStatements(System.Collections.Immutable.ImmutableArray<Language.Analysis.CodeAnalysis.Syntax.IGlobalMemberSyntax> globalStatements) => new NamespacesOrGlobalStatements(globalStatements);
}