// <auto-generated/>
using OneOf;
using System;
namespace Language.Analysis.CodeAnalysis.Syntax;
public partial class NamespaceOrGlobalStatements
{
    public bool IsNamespace => _oneOf.IsT0;
    public Language.Analysis.CodeAnalysis.Syntax.NamespaceSyntax Namespace => _oneOf.AsT0;
    public bool IsGlobalStatements => _oneOf.IsT1;
    public System.Collections.Immutable.ImmutableArray<Language.Analysis.CodeAnalysis.Syntax.IGlobalMemberSyntax> GlobalStatements => _oneOf.AsT1;

    OneOf<Language.Analysis.CodeAnalysis.Syntax.NamespaceSyntax, System.Collections.Immutable.ImmutableArray<Language.Analysis.CodeAnalysis.Syntax.IGlobalMemberSyntax>> _oneOf;
    public NamespaceOrGlobalStatements(Language.Analysis.CodeAnalysis.Syntax.NamespaceSyntax @namespace)
    {
        _oneOf = @namespace;
    }
    public NamespaceOrGlobalStatements(System.Collections.Immutable.ImmutableArray<Language.Analysis.CodeAnalysis.Syntax.IGlobalMemberSyntax> globalStatements)
    {
        _oneOf = globalStatements;
    }

public static implicit operator NamespaceOrGlobalStatements(OneOf<Language.Analysis.CodeAnalysis.Syntax.NamespaceSyntax, System.Collections.Immutable.ImmutableArray<Language.Analysis.CodeAnalysis.Syntax.IGlobalMemberSyntax>> other){if (other.IsT0){ return new NamespaceOrGlobalStatements(other.AsT0);}if (other.IsT1){ return new NamespaceOrGlobalStatements(other.AsT1);}throw new Exception();}
public static implicit operator OneOf<Language.Analysis.CodeAnalysis.Syntax.NamespaceSyntax, System.Collections.Immutable.ImmutableArray<Language.Analysis.CodeAnalysis.Syntax.IGlobalMemberSyntax>>(NamespaceOrGlobalStatements @this){    return @this._oneOf;}

    public static implicit operator NamespaceOrGlobalStatements(Language.Analysis.CodeAnalysis.Syntax.NamespaceSyntax @namespace) => new NamespaceOrGlobalStatements(@namespace);
    public static implicit operator NamespaceOrGlobalStatements(System.Collections.Immutable.ImmutableArray<Language.Analysis.CodeAnalysis.Syntax.IGlobalMemberSyntax> globalStatements) => new NamespaceOrGlobalStatements(globalStatements);
}